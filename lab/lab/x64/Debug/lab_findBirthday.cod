; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33135.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__6628E330_concurrencysal@h DB 01H
__DD735C24_sal@h DB 01H
__95D07812_vadefs@h DB 01H
__2C966F75_vcruntime@h DB 01H
__C84B2A68_xkeycheck@h DB 01H
__E4981F91_yvals_core@h DB 01H
__53AB384B_limits@h DB 01H
__8AA920FA_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__50BF2FAA_vcruntime_new@h DB 01H
__973DD6D2_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__EA84BEDA_crtdefs@h DB 01H
__7A2C09FE_use_ansi@h DB 01H
__B806B4B7_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__0E460208_cstdlib DB 01H
__81223BB7_xtr1common DB 01H
__2FEC17FD_intrin0@inl@h DB 01H
__F3A907D1_intrin0@h DB 01H
__BFC95293_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__099E6B1A_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__21B98AC3_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__42D4AAE8_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__9315BD49_cwchar DB 01H
__D0D5387F_iosfwd DB 01H
__AB8DD8A5_cstddef DB 01H
__7CEE9503_initializer_list DB 01H
__EDDD1674_stdint@h DB 01H
__B318E375_cstdint DB 01H
__86E2ECA3_type_traits DB 01H
__394B8783_utility DB 01H
__6CD66C6A___msvc_iter_core@hpp DB 01H
__81056E89_xutility DB 01H
__90A9D9C9_iterator DB 01H
__F7972D0B_share@h DB 01H
__C9486F03___msvc_system_error_abi@hpp DB 01H
__94BF1FE1_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__597317E9_eh@h DB 01H
__9FD3D380_vcruntime_exception@h DB 01H
__22DBD04C_exception DB 01H
__FFDAFD70___msvc_sanitizer_annotate_container@hpp DB 01H
__B9985323_float@h DB 01H
__7ADAA09D_cfloat DB 01H
__1C3CEDF9_limits DB 01H
__6B6686E8_new DB 01H
__28D75C9A_xatomic@h DB 01H
__53DEE440_xmemory DB 01H
__270D62DC_xstring DB 01H
__AB95EA11_stdexcept DB 01H
__A700C1C1_xcall_once@h DB 01H
__1093A1B8_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__797ACE9B_ctime DB 01H
__37C18DC8_xtimec@h DB 01H
__1B623E4D_xthreads@h DB 01H
__7709B13B_atomic DB 01H
__185DD3E1_system_error DB 01H
__78388AF5_vcruntime_typeinfo@h DB 01H
__F1DA9D90_typeinfo DB 01H
__A092E177_memory DB 01H
__8CD7B678_xfacet DB 01H
__8B91FF0A___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__06558CBD_cctype DB 01H
__791C33B7_locale@h DB 01H
__9DEADED9_clocale DB 01H
__EE537E58_xlocinfo DB 01H
__F83316ED_xlocale DB 01H
__D7B6094B_xiosbase DB 01H
__A93552AD_streambuf DB 01H
__66B470FA_xlocnum DB 01H
__93ABBCFE_ios DB 01H
__EB23CC29_ostream DB 01H
__88F3F913_istream DB 01H
__E37C1496_iostream DB 01H
__10C0B9D5_stdafx@h DB 01H
__43EEA80E_lab_findBirthday@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?findBirthday@@YAHHH@Z				; findBirthday
PUBLIC	__JustMyCode_Default
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?findBirthday@@YAHHH@Z DD imagerel $LN15
	DD	imagerel $LN15+617
	DD	imagerel $unwind$?findBirthday@@YAHHH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?findBirthday@@YAHHH@Z DD 025052e01H
	DD	01112316H
	DD	0700a0047H
	DD	05009H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?findBirthday@@YAHHH@Z$rtcName$0 DB 073H		; findBirthday
	DB	070H
	DB	069H
	DB	073H
	DB	06fH
	DB	06bH
	DB	00H
	ORG $+9
?findBirthday@@YAHHH@Z$rtcVarDesc DD 028H		; findBirthday
	DD	030H
	DQ	FLAT:?findBirthday@@YAHHH@Z$rtcName$0
	ORG $+48
?findBirthday@@YAHHH@Z$rtcFrameData DD 01H		; findBirthday
	DD	00H
	DQ	FLAT:?findBirthday@@YAHHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\уник\КПО\lab\lab\lab_findBirthday.cpp
;	COMDAT ?findBirthday@@YAHHH@Z
_TEXT	SEGMENT
spisok$ = 8
bday$ = 84
bmonth$ = 116
sum$ = 148
count$ = 180
precount$ = 212
aftcount$ = 244
i$4 = 276
i$5 = 308
day$ = 560
month$ = 568
?findBirthday@@YAHHH@Z PROC				; findBirthday, COMDAT

; 4    : {

$LN15:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00008	55		 push	 rbp
  00009	57		 push	 rdi
  0000a	48 81 ec 38 02
	00 00		 sub	 rsp, 568		; 00000238H
  00011	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00016	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  0001b	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	8b 8c 24 58 02
	00 00		 mov	 ecx, DWORD PTR [rsp+600]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43EEA80E_lab_findBirthday@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 5    : 	int spisok[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

  0003a	c7 45 08 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp], 31
  00041	c7 45 0c 1c 00
	00 00		 mov	 DWORD PTR spisok$[rbp+4], 28
  00048	c7 45 10 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp+8], 31
  0004f	c7 45 14 1e 00
	00 00		 mov	 DWORD PTR spisok$[rbp+12], 30
  00056	c7 45 18 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp+16], 31
  0005d	c7 45 1c 1e 00
	00 00		 mov	 DWORD PTR spisok$[rbp+20], 30
  00064	c7 45 20 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp+24], 31
  0006b	c7 45 24 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp+28], 31
  00072	c7 45 28 1e 00
	00 00		 mov	 DWORD PTR spisok$[rbp+32], 30
  00079	c7 45 2c 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp+36], 31
  00080	c7 45 30 1e 00
	00 00		 mov	 DWORD PTR spisok$[rbp+40], 30
  00087	c7 45 34 1f 00
	00 00		 mov	 DWORD PTR spisok$[rbp+44], 31

; 6    : 	int bday = 19, bmonth = 12, sum = 0, count, precount, aftcount = bday;

  0008e	c7 45 54 13 00
	00 00		 mov	 DWORD PTR bday$[rbp], 19
  00095	c7 45 74 0c 00
	00 00		 mov	 DWORD PTR bmonth$[rbp], 12
  0009c	c7 85 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR sum$[rbp], 0
  000a6	8b 45 54	 mov	 eax, DWORD PTR bday$[rbp]
  000a9	89 85 f4 00 00
	00		 mov	 DWORD PTR aftcount$[rbp], eax

; 7    : 
; 8    : 	if (month == 12 && bday < day)

  000af	83 bd 38 02 00
	00 0c		 cmp	 DWORD PTR month$[rbp], 12
  000b6	0f 85 a6 00 00
	00		 jne	 $LN8@findBirthd
  000bc	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  000c2	39 45 54	 cmp	 DWORD PTR bday$[rbp], eax
  000c5	0f 8d 97 00 00
	00		 jge	 $LN8@findBirthd

; 9    : 	{
; 10   : 		count = 0;

  000cb	c7 85 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR count$[rbp], 0

; 11   : 		precount = spisok[11] - day;

  000d5	b8 04 00 00 00	 mov	 eax, 4
  000da	48 6b c0 0b	 imul	 rax, rax, 11
  000de	8b 8d 30 02 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  000e4	8b 44 05 08	 mov	 eax, DWORD PTR spisok$[rbp+rax]
  000e8	2b c1		 sub	 eax, ecx
  000ea	89 85 d4 00 00
	00		 mov	 DWORD PTR precount$[rbp], eax

; 12   : 		for (int i = count; i < bmonth - 1; i++)

  000f0	8b 85 b4 00 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  000f6	89 85 14 01 00
	00		 mov	 DWORD PTR i$4[rbp], eax
  000fc	eb 0e		 jmp	 SHORT $LN4@findBirthd
$LN2@findBirthd:
  000fe	8b 85 14 01 00
	00		 mov	 eax, DWORD PTR i$4[rbp]
  00104	ff c0		 inc	 eax
  00106	89 85 14 01 00
	00		 mov	 DWORD PTR i$4[rbp], eax
$LN4@findBirthd:
  0010c	8b 45 74	 mov	 eax, DWORD PTR bmonth$[rbp]
  0010f	ff c8		 dec	 eax
  00111	39 85 14 01 00
	00		 cmp	 DWORD PTR i$4[rbp], eax
  00117	7d 1d		 jge	 SHORT $LN3@findBirthd

; 13   : 		{
; 14   : 			sum += spisok[i];

  00119	48 63 85 14 01
	00 00		 movsxd	 rax, DWORD PTR i$4[rbp]
  00120	8b 44 85 08	 mov	 eax, DWORD PTR spisok$[rbp+rax*4]
  00124	8b 8d 94 00 00
	00		 mov	 ecx, DWORD PTR sum$[rbp]
  0012a	03 c8		 add	 ecx, eax
  0012c	8b c1		 mov	 eax, ecx
  0012e	89 85 94 00 00
	00		 mov	 DWORD PTR sum$[rbp], eax

; 15   : 		}

  00134	eb c8		 jmp	 SHORT $LN2@findBirthd
$LN3@findBirthd:

; 16   : 		sum = sum + precount + aftcount;

  00136	8b 85 d4 00 00
	00		 mov	 eax, DWORD PTR precount$[rbp]
  0013c	8b 8d 94 00 00
	00		 mov	 ecx, DWORD PTR sum$[rbp]
  00142	03 c8		 add	 ecx, eax
  00144	8b c1		 mov	 eax, ecx
  00146	03 85 f4 00 00
	00		 add	 eax, DWORD PTR aftcount$[rbp]
  0014c	89 85 94 00 00
	00		 mov	 DWORD PTR sum$[rbp], eax

; 17   : 		return sum;

  00152	8b 85 94 00 00
	00		 mov	 eax, DWORD PTR sum$[rbp]
  00158	e9 ec 00 00 00	 jmp	 $LN1@findBirthd

; 18   : 	}

  0015d	e9 e7 00 00 00	 jmp	 $LN9@findBirthd
$LN8@findBirthd:

; 19   : 	else if (month == 12 && bday > day)

  00162	83 bd 38 02 00
	00 0c		 cmp	 DWORD PTR month$[rbp], 12
  00169	75 2e		 jne	 SHORT $LN10@findBirthd
  0016b	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  00171	39 45 54	 cmp	 DWORD PTR bday$[rbp], eax
  00174	7e 23		 jle	 SHORT $LN10@findBirthd

; 20   : 	{
; 21   : 		sum = bday - day;

  00176	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  0017c	8b 4d 54	 mov	 ecx, DWORD PTR bday$[rbp]
  0017f	2b c8		 sub	 ecx, eax
  00181	8b c1		 mov	 eax, ecx
  00183	89 85 94 00 00
	00		 mov	 DWORD PTR sum$[rbp], eax

; 22   : 		return sum;

  00189	8b 85 94 00 00
	00		 mov	 eax, DWORD PTR sum$[rbp]
  0018f	e9 b5 00 00 00	 jmp	 $LN1@findBirthd

; 23   : 	}

  00194	e9 b0 00 00 00	 jmp	 $LN11@findBirthd
$LN10@findBirthd:

; 24   : 	else if (month == 12 && bday == day)

  00199	83 bd 38 02 00
	00 0c		 cmp	 DWORD PTR month$[rbp], 12
  001a0	75 17		 jne	 SHORT $LN12@findBirthd
  001a2	8b 85 30 02 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  001a8	39 45 54	 cmp	 DWORD PTR bday$[rbp], eax
  001ab	75 0c		 jne	 SHORT $LN12@findBirthd

; 25   : 	{
; 26   : 		return 0;

  001ad	33 c0		 xor	 eax, eax
  001af	e9 95 00 00 00	 jmp	 $LN1@findBirthd

; 27   : 	}

  001b4	e9 90 00 00 00	 jmp	 $LN13@findBirthd
$LN12@findBirthd:

; 28   : 	else
; 29   : 	{
; 30   : 		precount = spisok[month - 1] - day;

  001b9	8b 85 38 02 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  001bf	ff c8		 dec	 eax
  001c1	48 98		 cdqe
  001c3	8b 8d 30 02 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  001c9	8b 44 85 08	 mov	 eax, DWORD PTR spisok$[rbp+rax*4]
  001cd	2b c1		 sub	 eax, ecx
  001cf	89 85 d4 00 00
	00		 mov	 DWORD PTR precount$[rbp], eax

; 31   : 		count = month;

  001d5	8b 85 38 02 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  001db	89 85 b4 00 00
	00		 mov	 DWORD PTR count$[rbp], eax

; 32   : 		for (int i = count; i < bmonth - 1; i++)

  001e1	8b 85 b4 00 00
	00		 mov	 eax, DWORD PTR count$[rbp]
  001e7	89 85 34 01 00
	00		 mov	 DWORD PTR i$5[rbp], eax
  001ed	eb 0e		 jmp	 SHORT $LN7@findBirthd
$LN5@findBirthd:
  001ef	8b 85 34 01 00
	00		 mov	 eax, DWORD PTR i$5[rbp]
  001f5	ff c0		 inc	 eax
  001f7	89 85 34 01 00
	00		 mov	 DWORD PTR i$5[rbp], eax
$LN7@findBirthd:
  001fd	8b 45 74	 mov	 eax, DWORD PTR bmonth$[rbp]
  00200	ff c8		 dec	 eax
  00202	39 85 34 01 00
	00		 cmp	 DWORD PTR i$5[rbp], eax
  00208	7d 1d		 jge	 SHORT $LN6@findBirthd

; 33   : 		{
; 34   : 			sum += spisok[i];

  0020a	48 63 85 34 01
	00 00		 movsxd	 rax, DWORD PTR i$5[rbp]
  00211	8b 44 85 08	 mov	 eax, DWORD PTR spisok$[rbp+rax*4]
  00215	8b 8d 94 00 00
	00		 mov	 ecx, DWORD PTR sum$[rbp]
  0021b	03 c8		 add	 ecx, eax
  0021d	8b c1		 mov	 eax, ecx
  0021f	89 85 94 00 00
	00		 mov	 DWORD PTR sum$[rbp], eax

; 35   : 		}

  00225	eb c8		 jmp	 SHORT $LN5@findBirthd
$LN6@findBirthd:

; 36   : 		sum = sum + precount + aftcount;

  00227	8b 85 d4 00 00
	00		 mov	 eax, DWORD PTR precount$[rbp]
  0022d	8b 8d 94 00 00
	00		 mov	 ecx, DWORD PTR sum$[rbp]
  00233	03 c8		 add	 ecx, eax
  00235	8b c1		 mov	 eax, ecx
  00237	03 85 f4 00 00
	00		 add	 eax, DWORD PTR aftcount$[rbp]
  0023d	89 85 94 00 00
	00		 mov	 DWORD PTR sum$[rbp], eax

; 37   : 		return sum;

  00243	8b 85 94 00 00
	00		 mov	 eax, DWORD PTR sum$[rbp]
$LN13@findBirthd:
$LN11@findBirthd:
$LN9@findBirthd:
$LN1@findBirthd:

; 38   : 	}
; 39   : }

  00249	48 8b f8	 mov	 rdi, rax
  0024c	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00250	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?findBirthday@@YAHHH@Z$rtcFrameData
  00257	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0025c	48 8b c7	 mov	 rax, rdi
  0025f	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  00266	5f		 pop	 rdi
  00267	5d		 pop	 rbp
  00268	c3		 ret	 0
?findBirthday@@YAHHH@Z ENDP				; findBirthday
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\уник\КПО\lab\lab\lab_findBirthday.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43EEA80E_lab_findBirthday@cpp
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002b	5f		 pop	 rdi
  0002c	5d		 pop	 rbp
  0002d	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\уник\КПО\lab\lab\lab_findBirthday.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43EEA80E_lab_findBirthday@cpp
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00026	5f		 pop	 rdi
  00027	5d		 pop	 rbp
  00028	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
